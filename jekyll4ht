#!/usr/bin/env texlua
kpse.set_program_name("luatex")


local make4ht  = require("make4ht-lib")
local lapp     = require("lapp-mk4")
local mkutils  = require("mkutils")
local mkparams = require("mkparams")
local config   = require("jekyll-config")

-- configuration handling
-- config file is Lua file, it can be placed in current directory or its parents (at any level), or
-- in $HOME or $XDG_CONFIG_HOME/jekyll4ht
-- config file should be named .jekyll4ht
--
local configname = ".jekyll4ht"
local conffile = config.find_config(configname) or config.find_xdg_config(configname)
local configuration = {}

-- default configuration. use environment variables
configuration.base = os.getenv("JEKYLL4HT_BASE")
configuration.posts = os.getenv("JEKYLL4HT_POSTS") or "./_posts"
configuration.css  = os.getenv("JEKYLL4HT_CSS") or "./css"

if conffile then
  -- configuration table is used as environment for the config file
  -- each global variable used in the config file is saved in the configuration table
  configuration = config.load_config(conffile, configuration)
else
  print "jekyll4ht warning: no config file found"
end

for k,v in pairs(configuration) do
  if type(v) == "string" then
    print(k,v)
  end
end

-- args string is here just as sample, we dont pass it it to 
-- mkparams.get_args() so default args string is used

local options = {progname = "jekyll4ht"}
local args = mkparams.get_args(options)

local parameters = mkparams.process_args(args) 


-- add to tex4ht_sty_par: imgdir:adresar so obrazky,mod
-- Make:htlatex {packages = '\\RequirePackage{jekyll}'}
-- css soubory kopírovat taky do samostatnýho adresáře, jméno bude ve frontmatter, je věcí 
-- usera dát cestu k css souboru do šablony
local mode = parameters.mode
local build_file = parameters.build_file 

local make = mkutils.load_config(parameters, build_file)["Make"]

-- draft mode is special. no YAML header is created and files aren't copied to 
-- the output destination

if mode ~= "draft" then
  parameters.packages = parameters.packages .. '\\RequirePackage{jekyll}' 
end

make.params = parameters
for k, v in pairs(parameters) do
  print("par",k,v)
end


if make:length() < 1 then
  if mode == "draft" then
    make:htlatex()
  else
    make:htlatex()
    make:htlatex()
    make:htlatex()
  end
end


if not args["no-tex4ht"] then
  make:tex4ht()
end

local ext = args.xetex and "xdv" or "dvi"
if #make.image_patterns > 0 then
  make.params.t4ht_par = make.params.t4ht_par .. " -p"
end
make:t4ht {ext = ext}

-- we don't want to copy the files in the draft mode
if mode ~= "draft" then
  if not configuration.base then
    print "jekyll4ht error: base dir configuration not set"
    os.exit(1)
  end
  make:match("tmp$", function() return false,"tmp file" end)
  make:match(".*",function(filename,par)
    -- local outdir =  '' --par["outdir"] and par["outdir"] .."/" or ''
    -- if par['outdir'] ~= "" then outdir = par['outdir'] .. '/' end
    local outdir = configuration.base ..  "/"
    print("outdir: "..outdir)
    local outfilename = outdir .. filename
    mkutils.copy(filename,outfilename)
    return true
  end)
end
make:run()
